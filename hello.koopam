fun @main(): i32
{
  %entry:
  %temp_l_result_1 = alloc i32
    br 2, %then_0, %else_1
  %then_0:
    %0 = ne 2, 0
    %1 = ne 3, 0
    %2 = and %1, %0
  store %2, %temp_l_result_1
    jump %end_2
  %else_1:
  store 0, %temp_l_result_1
    jump %end_2
  %end_2:
    %4 = load %temp_l_result_1
    %5 = or 1, %4
    %6 = ne %5, 0
    @a_2 = alloc i32
    store %6, @a_2
  %temp_l_result_3 = alloc i32
    br 0, %then_3, %else_4
  %then_3:
    %7 = ne 0, 0
    %8 = ne 1, 0
    %9 = and %8, %7
  store %9, %temp_l_result_3
    jump %end_5
  %else_4:
  store 0, %temp_l_result_3
    jump %end_5
  %end_5:
    %11 = load %temp_l_result_3
    %12 = or %11, 0
    %13 = ne %12, 0
    @b_4 = alloc i32
    store %13, @b_4
  %temp_l_result_5 = alloc i32
    br 1, %then_6, %else_7
  %then_6:
    %14 = ne 1, 0
    %15 = ne 0, 0
    %16 = and %15, %14
  store %16, %temp_l_result_5
    jump %end_8
  %else_7:
  store 0, %temp_l_result_5
    jump %end_8
  %end_8:
    %18 = load %temp_l_result_5
    %19 = or %18, 1
    %20 = ne %19, 0
    %21 = mul %20, 4
    @c_6 = alloc i32
    store %21, @c_6
    @d_7 = alloc i32
    store 5, @d_7
  %temp_l_result_8 = alloc i32
    br 7, %then_9, %else_10
  %then_9:
  store %-1, %temp_l_result_8
    jump %end_11
  %else_10:
  store 0, %temp_l_result_8
    jump %end_11
  %end_11:
    %23 = load %temp_l_result_8
    %24 = load @a_2
    %25 = eq %24, 2
    %26 = load @a_2
    %27 = eq %26, 1
    %28 = or %27, %25
    %29 = ne %28, 0
    br %29, %then_12, %end_13
  %then_12:
    jump %end_13
  %end_13:
    %30 = load @b_4
    %31 = eq %30, 1
    %32 = load @b_4
    %33 = eq %32, 0
    %34 = or %33, %31
    %35 = ne %34, 0
    br %35, %then_14, %else_15
  %then_14:
    %36 = load @d_7
    %37 = add %36, 1
    store %37, @d_7
    jump %end_16
  %else_15:
    jump %end_16
  %end_16:
  %temp_l_result_9 = alloc i32
    %38 = load @c_6
    br %38, %then_17, %else_18
  %then_17:
    %39 = load @d_7
    %40 = ne %38, 0
    %41 = ne %39, 0
    %42 = and %41, %40
  store %42, %temp_l_result_9
    jump %end_19
  %else_18:
  store 0, %temp_l_result_9
    jump %end_19
  %end_19:
    %44 = load %temp_l_result_9
  %temp_l_result_10 = alloc i32
    %45 = load @a_2
    br %45, %then_20, %else_21
  %then_20:
    %46 = load @b_4
    %47 = ne %45, 0
    %48 = ne %46, 0
    %49 = and %48, %47
  store %49, %temp_l_result_10
    jump %end_22
  %else_21:
  store 0, %temp_l_result_10
    jump %end_22
  %end_22:
    %51 = load %temp_l_result_10
    %52 = or %51, %44
    %53 = ne %52, 0
    br %53, %then_23, %end_24
  %then_23:
    %54 = load @d_7
    %55 = add %54, 1
    store %55, @d_7
    jump %end_24
  %end_24:
    %56 = load @c_6
    %57 = eq 0, %56
    %58 = load @d_7
    %59 = or %58, %57
    %60 = ne %59, 0
    ret %60
  %block_25:
    %61 = load @d_7
    %62 = or %61, 1
    %63 = ne %62, 0
    ret %63
}
